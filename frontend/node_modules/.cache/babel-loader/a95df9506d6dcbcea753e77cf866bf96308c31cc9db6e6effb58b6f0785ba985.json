{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import WebsiteInputStep from'./WebsiteInputStep';import CompetitorAnalysisStep from'./CompetitorAnalysisStep';import ReportGenerationStep from'./ReportGenerationStep';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CompetitorWizard=()=>{const[currentStep,setCurrentStep]=useState(1);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);// Data for each step\nconst[websiteUrl,setWebsiteUrl]=useState('');const[competitors,setCompetitors]=useState([]);const[competitorDetails,setCompetitorDetails]=useState({});const[report,setReport]=useState('');// Steps configuration\nconst steps=[{number:1,name:'Website Input'},{number:2,name:'Competitor Analysis'},{number:3,name:'Report'}];const handleWebsiteSubmit=async url=>{setLoading(true);setError(null);try{setWebsiteUrl(url);const response=await axios.post('/api/find-competitors',{url});// Check if the response has the competitors array\nif(response.data&&response.data.competitors){setCompetitors(response.data.competitors);}else{// If the API doesn't return the expected format, use a fallback\nsetCompetitors([{name:'Competitor A',url:'https://www.competitora.com'},{name:'Competitor B',url:'https://www.competitorb.com'},{name:'Competitor C',url:'https://www.competitorc.com'}]);}setLoading(false);setCurrentStep(2);}catch(err){console.error('Error analyzing website:',err);setError('Failed to analyze the website. Please try again.');setLoading(false);}};const handleCompetitorAnalysis=async selectedCompetitors=>{setLoading(true);setError(null);try{// Process each competitor's URL\nconst competitorDetails={};for(const competitor of selectedCompetitors){try{// Call the scrape_competitor endpoint for each competitor\nconst response=await axios.post('/scrape_competitor',{url:competitor.url});// For now, we'll use mock data for each competitor since our endpoint\n// doesn't return the actual scraped data in the response\ncompetitorDetails[competitor.name]={companyName:competitor.name,socialMediaURL:'https://twitter.com/'+competitor.name.toLowerCase().replace(' ',''),products:'Product A, Product B, Product C',productDescription:'This is a detailed description of the competitor\\'s products and services.'};}catch(error){console.error(`Error analyzing competitor ${competitor.name}:`,error);}}setCompetitorDetails(competitorDetails);// Generate report using the API\ntry{const reportResponse=await axios.post('/api/generate-report',{websiteUrl,competitorDetails});if(reportResponse.data&&reportResponse.data.report){setReport(reportResponse.data.report);}else{// Fallback to local report generation if API fails\nconst reportText=generateReport(competitorDetails);setReport(reportText);}}catch(reportError){console.error('Error generating report:',reportError);// Fallback to local report generation\nconst reportText=generateReport(competitorDetails);setReport(reportText);}setLoading(false);setCurrentStep(3);}catch(err){console.error('Error in competitor analysis:',err);setError('Failed to analyze competitors. Please try again.');setLoading(false);}};const generateReport=details=>{const competitorNames=Object.keys(details);let report=`# Competitor Intelligence Report\\n\\n`;report+=`## Overview\\n\\n`;report+=`This report analyzes ${competitorNames.length} competitors for ${websiteUrl}.\\n\\n`;report+=`## Competitive Landscape\\n\\n`;competitorNames.forEach(name=>{const competitor=details[name];report+=`### ${competitor.companyName}\\n\\n`;report+=`**Products:** ${competitor.products}\\n\\n`;report+=`**Product Description:** ${competitor.productDescription}\\n\\n`;report+=`**Social Media:** ${competitor.socialMediaURL}\\n\\n`;report+=`---\\n\\n`;});report+=`## Recommendations\\n\\n`;report+=`Based on the analysis, we recommend focusing on the following areas:\\n\\n`;report+=`1. Product Differentiation: Create unique selling points to stand out from competitors\\n`;report+=`2. Social Media Presence: Enhance your social media strategy\\n`;report+=`3. Market Positioning: Identify gaps in the market that competitors aren't addressing\\n\\n`;return report;};const getStepContent=()=>{switch(currentStep){case 1:return/*#__PURE__*/_jsx(WebsiteInputStep,{onSubmit:handleWebsiteSubmit});case 2:return/*#__PURE__*/_jsx(CompetitorAnalysisStep,{competitors:competitors,onSubmit:handleCompetitorAnalysis});case 3:return/*#__PURE__*/_jsx(ReportGenerationStep,{websiteUrl:websiteUrl,competitors:competitors,competitorDetails:competitorDetails,report:report});default:return'Unknown step';}};return/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Competitor Intelligence Wizard\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Analyze your competitors and generate detailed intelligence reports\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"step-indicator\",children:steps.map(step=>/*#__PURE__*/_jsxs(\"div\",{className:`step ${currentStep===step.number?'active':''} ${currentStep>step.number?'completed':''}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"step-circle\",children:step.number}),/*#__PURE__*/_jsx(\"div\",{className:\"step-name\",children:step.name})]},step.number))}),/*#__PURE__*/_jsx(\"div\",{className:\"step-content\",children:loading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading-spinner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border text-primary\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"ms-3\",children:\"Analyzing data...\"})]}):error?/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-danger\",role:\"alert\",children:[error,/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-danger ms-3\",onClick:()=>setError(null),children:\"Try Again\"})]}):getStepContent()})]});};export default CompetitorWizard;","map":{"version":3,"names":["React","useState","axios","WebsiteInputStep","CompetitorAnalysisStep","ReportGenerationStep","jsx","_jsx","jsxs","_jsxs","CompetitorWizard","currentStep","setCurrentStep","loading","setLoading","error","setError","websiteUrl","setWebsiteUrl","competitors","setCompetitors","competitorDetails","setCompetitorDetails","report","setReport","steps","number","name","handleWebsiteSubmit","url","response","post","data","err","console","handleCompetitorAnalysis","selectedCompetitors","competitor","companyName","socialMediaURL","toLowerCase","replace","products","productDescription","reportResponse","reportText","generateReport","reportError","details","competitorNames","Object","keys","length","forEach","getStepContent","onSubmit","className","children","map","step","role","onClick"],"sources":["/Users/thomasdowuona-hyde/Competitor-Intelligence-OpenAI-API/frontend/src/components/CompetitorWizard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport WebsiteInputStep from './WebsiteInputStep';\nimport CompetitorAnalysisStep from './CompetitorAnalysisStep';\nimport ReportGenerationStep from './ReportGenerationStep';\n\nconst CompetitorWizard = () => {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  // Data for each step\n  const [websiteUrl, setWebsiteUrl] = useState('');\n  const [competitors, setCompetitors] = useState([]);\n  const [competitorDetails, setCompetitorDetails] = useState({});\n  const [report, setReport] = useState('');\n\n  // Steps configuration\n  const steps = [\n    { number: 1, name: 'Website Input' },\n    { number: 2, name: 'Competitor Analysis' },\n    { number: 3, name: 'Report' }\n  ];\n\n  const handleWebsiteSubmit = async (url) => {\n    setLoading(true);\n    setError(null);\n    try {\n      setWebsiteUrl(url);\n      \n      const response = await axios.post('/api/find-competitors', { url });\n      \n      // Check if the response has the competitors array\n      if (response.data && response.data.competitors) {\n        setCompetitors(response.data.competitors);\n      } else {\n        // If the API doesn't return the expected format, use a fallback\n        setCompetitors([\n          { name: 'Competitor A', url: 'https://www.competitora.com' },\n          { name: 'Competitor B', url: 'https://www.competitorb.com' },\n          { name: 'Competitor C', url: 'https://www.competitorc.com' }\n        ]);\n      }\n      \n      setLoading(false);\n      setCurrentStep(2);\n    } catch (err) {\n      console.error('Error analyzing website:', err);\n      setError('Failed to analyze the website. Please try again.');\n      setLoading(false);\n    }\n  };\n\n  const handleCompetitorAnalysis = async (selectedCompetitors) => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Process each competitor's URL\n      const competitorDetails = {};\n      \n      for (const competitor of selectedCompetitors) {\n        try {\n          // Call the scrape_competitor endpoint for each competitor\n          const response = await axios.post('/scrape_competitor', { \n            url: competitor.url \n          });\n          \n          // For now, we'll use mock data for each competitor since our endpoint\n          // doesn't return the actual scraped data in the response\n          competitorDetails[competitor.name] = {\n            companyName: competitor.name,\n            socialMediaURL: 'https://twitter.com/' + competitor.name.toLowerCase().replace(' ', ''),\n            products: 'Product A, Product B, Product C',\n            productDescription: 'This is a detailed description of the competitor\\'s products and services.'\n          };\n        } catch (error) {\n          console.error(`Error analyzing competitor ${competitor.name}:`, error);\n        }\n      }\n      \n      setCompetitorDetails(competitorDetails);\n      \n      // Generate report using the API\n      try {\n        const reportResponse = await axios.post('/api/generate-report', {\n          websiteUrl,\n          competitorDetails\n        });\n        \n        if (reportResponse.data && reportResponse.data.report) {\n          setReport(reportResponse.data.report);\n        } else {\n          // Fallback to local report generation if API fails\n          const reportText = generateReport(competitorDetails);\n          setReport(reportText);\n        }\n      } catch (reportError) {\n        console.error('Error generating report:', reportError);\n        // Fallback to local report generation\n        const reportText = generateReport(competitorDetails);\n        setReport(reportText);\n      }\n      \n      setLoading(false);\n      setCurrentStep(3);\n    } catch (err) {\n      console.error('Error in competitor analysis:', err);\n      setError('Failed to analyze competitors. Please try again.');\n      setLoading(false);\n    }\n  };\n\n  const generateReport = (details) => {\n    const competitorNames = Object.keys(details);\n    \n    let report = `# Competitor Intelligence Report\\n\\n`;\n    report += `## Overview\\n\\n`;\n    report += `This report analyzes ${competitorNames.length} competitors for ${websiteUrl}.\\n\\n`;\n    \n    report += `## Competitive Landscape\\n\\n`;\n    competitorNames.forEach(name => {\n      const competitor = details[name];\n      report += `### ${competitor.companyName}\\n\\n`;\n      report += `**Products:** ${competitor.products}\\n\\n`;\n      report += `**Product Description:** ${competitor.productDescription}\\n\\n`;\n      report += `**Social Media:** ${competitor.socialMediaURL}\\n\\n`;\n      report += `---\\n\\n`;\n    });\n    \n    report += `## Recommendations\\n\\n`;\n    report += `Based on the analysis, we recommend focusing on the following areas:\\n\\n`;\n    report += `1. Product Differentiation: Create unique selling points to stand out from competitors\\n`;\n    report += `2. Social Media Presence: Enhance your social media strategy\\n`;\n    report += `3. Market Positioning: Identify gaps in the market that competitors aren't addressing\\n\\n`;\n    \n    return report;\n  };\n\n  const getStepContent = () => {\n    switch (currentStep) {\n      case 1:\n        return <WebsiteInputStep onSubmit={handleWebsiteSubmit} />;\n      case 2:\n        return <CompetitorAnalysisStep \n                 competitors={competitors} \n                 onSubmit={handleCompetitorAnalysis} />;\n      case 3:\n        return <ReportGenerationStep \n                 websiteUrl={websiteUrl}\n                 competitors={competitors}\n                 competitorDetails={competitorDetails}\n                 report={report} />;\n      default:\n        return 'Unknown step';\n    }\n  };\n\n  return (\n    <div className=\"wizard-container\">\n      <div className=\"wizard-header\">\n        <h1>Competitor Intelligence Wizard</h1>\n        <p>Analyze your competitors and generate detailed intelligence reports</p>\n      </div>\n      \n      <div className=\"step-indicator\">\n        {steps.map((step) => (\n          <div \n            key={step.number} \n            className={`step ${currentStep === step.number ? 'active' : ''} ${currentStep > step.number ? 'completed' : ''}`}\n          >\n            <div className=\"step-circle\">{step.number}</div>\n            <div className=\"step-name\">{step.name}</div>\n          </div>\n        ))}\n      </div>\n      \n      <div className=\"step-content\">\n        {loading ? (\n          <div className=\"loading-spinner\">\n            <div className=\"spinner-border text-primary\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n            <p className=\"ms-3\">Analyzing data...</p>\n          </div>\n        ) : error ? (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            {error}\n            <button \n              className=\"btn btn-outline-danger ms-3\"\n              onClick={() => setError(null)}\n            >\n              Try Again\n            </button>\n          </div>\n        ) : (\n          getStepContent()\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CompetitorWizard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}